<?xml version="1.0" encoding="UTF-8"?>
<operation id="435f5e86-9863-495e-8332-09dbc4e740e8">
  <descriptionCdata><![CDATA[435f5e86-9863-495e-8332-09dbc4e740e8.description=<pre>\nChecks to see if a list contains every element in another list.\n\nInputs\:\nsublist -The contained list.\ncontainer - The containing list.\ndelimiter - A delimiter separating elements in the two lists. Default is a comma\nignoreCase - If set to 'True' then the compare is not case sensitive. Default is True\n\nResponses\:\ntrue - sublist is contained in container.\nfalse - sublist is not contained in container.\n\nResults\:\nResult - All items contained in the sublist that are not in the container. \n</pre>    
435f5e86-9863-495e-8332-09dbc4e740e8.ff01430f-f9da-482c-bdf5-d8d475ca7b0e.prompt=Ignore Case
]]></descriptionCdata>
  <annotation>435f5e86-9863-495e-8332-09dbc4e740e8.description</annotation>
  <name>Contains All</name>
  <categories/>
  <inputs>
    <userInputBinding id="b5d32dcb-fd74-4cba-8317-6d09f4aeb399">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>sublist</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="f0c3308a-3fc3-47b5-bed0-2441155263ad">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>container</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="9436a8ef-de5d-4625-89ae-5c780bf750f3">
      <annotation></annotation>
      <assignFromContext>false</assignFromContext>
      <assignToContext>false</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>delimiter</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <userInputBinding id="ff01430f-f9da-482c-bdf5-d8d475ca7b0e">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>ignoreCase</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt>435f5e86-9863-495e-8332-09dbc4e740e8.ff01430f-f9da-482c-bdf5-d8d475ca7b0e.prompt</prompt>
      <isMultiSelect>false</isMultiSelect>
      <link>
        <refId>362bc113-e130-45d5-be90-832d5de87730</refId>
        <refName>Boolean</refName>
      </link>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
  </inputs>
  <scriptlet id="a3e7ced4-5a53-4a2f-8bd9-99459f80fda1">
    <annotation></annotation>
    <name>Operation Contains All (418595e1-7163-4ed8-bab3-707025252cea)</name>
    <script>// default response
scriptletResponse = &quot;false&quot;;

// All items contained in the sublist that are not in the container.
scriptletResult = &quot;&quot;;

// check delimiter, default to comma
if (typeof(delimiter) == &quot;undefined&quot;)
    limiter = &quot;,&quot;;	
else
    limiter = delimiter;	

// check for case sensitive compare. Default is True
var caseIgnore = true;
if (typeof(ignoreCase) == &quot;undefined&quot;) {
    // do nothing, default to true
} else if(ignoreCase.toLowerCase() == &quot;false&quot;) {
    caseIgnore = false;
} 

// split sublist based on the delimiter
var sub = sublist.split(limiter);

// split container list based on the delimiter
var parent = container.split(limiter);

if (sub.length == 1){
   if (caseIgnore)
       sub = sub[0].toLowerCase();
       
   if (contains(parent, sub, caseIgnore)) 
       scriptletResponse = &quot;true&quot;;
   else
	   scriptletResult = sub;
} else {  
    missing = &quot;&quot;;

    if (sub==null || parent==null) {
      scriptletResponse = &quot;false&quot;;
    } else {
	    for (count = 0; count &lt; sub.length; count++){
		    var curr = sub[count];
		    if (caseIgnore)
		        curr = curr.toLowerCase();
		    if (!contains(parent, curr, caseIgnore)){
			    if (missing.length &gt; 0){
				    missing += delimiter;
				    missing += curr;
			    } 
			    else
				    missing = curr;
		    }
	    }
    }
    if (missing.length &gt; 0){
	    scriptletResponse = &quot;false&quot;;
	    scriptletResult = missing;
    } else {
	    scriptletResponse = &quot;true&quot;;
	    scriptletResult = &quot;&quot;;
    }
}

function contains(parent, sub, caseIgnore) {
	for (icount = 0; icount &lt; parent.length; icount++){
		var p = parent[icount];
		if (caseIgnore) 
		    p = p.toLowerCase();
		if (p == sub) 
		    return true;
	}
	return false;
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="0332a036-4715-433b-95de-08b0362b0d41">
      <annotation></annotation>
      <name>true</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="af0406ad-4589-4505-b452-e7aca9db374b">
      <annotation></annotation>
      <name>false</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="77256871-d4bc-47f0-a91b-b3884393b0a4">
    <annotation></annotation>
    <name>returnResult</name>
    <fieldName>returnResult</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="f590513a-bcc4-417e-9603-7866ba4d3f6c">
    <baseIcon>compare.png</baseIcon>
    <basePath>Utilities/</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <opRef>
    <refId>ddd79f22-8b1e-4605-88d5-d912bb2da2b9</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
  <overrideGroupAlias>${overrideJRAS}</overrideGroupAlias>
</operation>