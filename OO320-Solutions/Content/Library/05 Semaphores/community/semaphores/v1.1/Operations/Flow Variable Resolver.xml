<?xml version="1.0" encoding="UTF-8"?>
<operation id="bb81ceeb-f031-4534-9a36-1912586b2f6f">
  <descriptionCdata><![CDATA[bb81ceeb-f031-4534-9a36-1912586b2f6f.description=<pre>Resolves any flow variables in a String. This is useful if you have an input to a flow that references undefined flow variables, and define them later. Pass in the flow variable key name of the string that contains unresolved flow variables.\n\nInputs\:\nkeyName - The name of the flow variable that should have its value reresolved.\neraseUnresolved - A boolean value. If true, any unresolved flow variable references will be replaced by nothing (IE ${variable} disappears).\n\nResponses\:\nsuccess - One or more flow variables were replaced, or could not be resolved and were erased from the string.\nfailure - No flow variables were referenced in the string.\n\nReturns\:\nThe resulting string having had flow variable references replaced with the resolved values.</pre>
]]></descriptionCdata>
  <annotation>bb81ceeb-f031-4534-9a36-1912586b2f6f.description</annotation>
  <name>Flow Variable Resolver</name>
  <categories/>
  <inputs>
    <userInputBinding id="998620eb-a73d-4399-a5e3-65749815a263">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>true</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>keyName</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <record>false</record>
      <prompt></prompt>
      <isMultiSelect>false</isMultiSelect>
      <sourceDelimiter>|</sourceDelimiter>
    </userInputBinding>
    <staticBinding id="eae74eae-fdc7-4eec-9e84-3c6cc65cb2f6">
      <annotation></annotation>
      <assignFromContext>true</assignFromContext>
      <assignToContext>true</assignToContext>
      <inputType>STRING</inputType>
      <isList>false</isList>
      <required>false</required>
      <isPersisted>true</isPersisted>
      <inputSymbol>eraseUnresolved</inputSymbol>
      <listDelimiter>,</listDelimiter>
      <value>false</value>
      <record>false</record>
    </staticBinding>
  </inputs>
  <scriptlet id="2f1c9abc-591b-422b-9ddb-59b9a091985e">
    <annotation></annotation>
    <name>Operation Flow Variable Resolver (2da3d748-5729-4d35-a49a-74f5d4185182)</name>
    <script>try {
templateString = scriptletContext.get(keyName);
initialString = templateString; 
unrezolvedVar = [];
unrezolvedIndex = [];

start = templateString .indexOf(&quot;${&quot;);
end = templateString .indexOf(&quot;}&quot;);
varName = &quot;&quot;

while (start &gt;= 0){
    varName = templateString.substring(start+2, end);
    toReplace = &quot;${&quot;+varName+&quot;}&quot;;
    replaceWith = scriptletContext.get(varName);
               
    if (typeof(replaceWith) == &quot;undefined&quot; || replaceWith == null || replaceWith == &quot;&quot;){
        templateString = templateString.replace(toReplace, &quot;&quot;);
        unrezolvedVar.push(toReplace);
        unrezolvedIndex.push(start);
    }else{
        templateString = templateString.replace(toReplace, replaceWith);
    }
    
    start = templateString.indexOf(&quot;${&quot;);
    end = templateString.indexOf(&quot;}&quot;);
}

if (typeof(eraseUnresolved) == &quot;undefined&quot; || eraseUnresolved == null || eraseUnresolved == &quot;&quot; || eraseUnresolved.toString() == &quot;false&quot; ){
    offset = 0;
    for (i=0; i&lt;unrezolvedVar.length; i++){
        templateString =  new java.lang.StringBuffer(templateString).insert(offset + unrezolvedIndex[i], unrezolvedVar[i]).toString();                                       
        offset = parseInt(offset + unrezolvedVar[i].length);
    }
}

scriptletResponse = &quot;success&quot;;
scriptletResult = templateString;

if (templateString == initialString){
    scriptletResponse = &quot;failure&quot;;
}}
catch (e){
    scriptletResponse = &quot;failure&quot;;
    scriptletResult = &quot;&quot;+e;
}</script>
    <type>RHINO</type>
  </scriptlet>
  <possibleResponses>
    <opResponse id="dc826971-7217-407f-b42e-0f6255ab0c9f">
      <annotation></annotation>
      <name>success</name>
      <isDefault>false</isDefault>
      <onFailure>false</onFailure>
      <type>RESOLVED</type>
      <matchRules/>
    </opResponse>
    <opResponse id="1980a6c3-1ca4-459e-8c8e-45894350662b">
      <annotation></annotation>
      <name>failure</name>
      <isDefault>true</isDefault>
      <onFailure>true</onFailure>
      <type>ERROR</type>
      <matchRules/>
    </opResponse>
  </possibleResponses>
  <availableResultExpressions/>
  <resultExpression id="a48eda92-3ad2-48c4-9944-f28f0ebbef93">
    <annotation></annotation>
    <name>returnResult</name>
    <fieldName>returnResult</fieldName>
    <sourceType>RAWRESULT</sourceType>
    <filters/>
  </resultExpression>
  <iconSpec id="30dabc9f-b6fc-4214-a75c-492245764b13">
    <baseIcon>compare.png</baseIcon>
    <basePath>Utilities</basePath>
    <readOnly>false</readOnly>
    <layers/>
  </iconSpec>
  <opRef>
    <refId>aedbea49-e28b-4ed5-a64d-25681e3c8196</refId>
  </opRef>
  <fieldValues/>
  <groupAliasRef>
    <refId>5233030c-af46-432b-a682-b326ca6bf2ae</refId>
    <refName>RAS_Operator_Path</refName>
  </groupAliasRef>
</operation>